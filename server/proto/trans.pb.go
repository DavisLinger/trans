// Code generated by protoc-gen-go. DO NOT EDIT.
// source: trans.proto

package transport

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TransportReq struct {
	FileName             string   `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileSize             int64    `protobuf:"varint,2,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransportReq) Reset()         { *m = TransportReq{} }
func (m *TransportReq) String() string { return proto.CompactTextString(m) }
func (*TransportReq) ProtoMessage()    {}
func (*TransportReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_afbc80efa276a497, []int{0}
}

func (m *TransportReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransportReq.Unmarshal(m, b)
}
func (m *TransportReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransportReq.Marshal(b, m, deterministic)
}
func (m *TransportReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransportReq.Merge(m, src)
}
func (m *TransportReq) XXX_Size() int {
	return xxx_messageInfo_TransportReq.Size(m)
}
func (m *TransportReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TransportReq.DiscardUnknown(m)
}

var xxx_messageInfo_TransportReq proto.InternalMessageInfo

func (m *TransportReq) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *TransportReq) GetFileSize() int64 {
	if m != nil {
		return m.FileSize
	}
	return 0
}

func (m *TransportReq) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type TransportResp struct {
	FileName             string   `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransportResp) Reset()         { *m = TransportResp{} }
func (m *TransportResp) String() string { return proto.CompactTextString(m) }
func (*TransportResp) ProtoMessage()    {}
func (*TransportResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_afbc80efa276a497, []int{1}
}

func (m *TransportResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransportResp.Unmarshal(m, b)
}
func (m *TransportResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransportResp.Marshal(b, m, deterministic)
}
func (m *TransportResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransportResp.Merge(m, src)
}
func (m *TransportResp) XXX_Size() int {
	return xxx_messageInfo_TransportResp.Size(m)
}
func (m *TransportResp) XXX_DiscardUnknown() {
	xxx_messageInfo_TransportResp.DiscardUnknown(m)
}

var xxx_messageInfo_TransportResp proto.InternalMessageInfo

func (m *TransportResp) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func init() {
	proto.RegisterType((*TransportReq)(nil), "transport.transportReq")
	proto.RegisterType((*TransportResp)(nil), "transport.transportResp")
}

func init() { proto.RegisterFile("trans.proto", fileDescriptor_afbc80efa276a497) }

var fileDescriptor_afbc80efa276a497 = []byte{
	// 158 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2e, 0x29, 0x4a, 0xcc,
	0x2b, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x04, 0x73, 0x0a, 0xf2, 0x8b, 0x4a, 0x94,
	0x62, 0xb8, 0x78, 0xe0, 0x9c, 0xa0, 0xd4, 0x42, 0x21, 0x69, 0x2e, 0xce, 0xb4, 0xcc, 0x9c, 0xd4,
	0xf8, 0xbc, 0xc4, 0xdc, 0x54, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x0e, 0x90, 0x80, 0x5f,
	0x62, 0x6e, 0x2a, 0x5c, 0xb2, 0x38, 0xb3, 0x2a, 0x55, 0x82, 0x49, 0x81, 0x51, 0x83, 0x19, 0x22,
	0x19, 0x9c, 0x59, 0x95, 0x2a, 0x24, 0xc4, 0xc5, 0x92, 0x92, 0x58, 0x92, 0x28, 0xc1, 0x0c, 0xd6,
	0x04, 0x66, 0x2b, 0xe9, 0x70, 0xf1, 0x22, 0x99, 0x5e, 0x5c, 0x80, 0xd7, 0x78, 0x23, 0x77, 0x2e,
	0x84, 0xc3, 0x84, 0xac, 0xb8, 0x58, 0xc1, 0x1c, 0x21, 0x71, 0x3d, 0xb8, 0xa0, 0x1e, 0xb2, 0x53,
	0xa5, 0x24, 0xb0, 0x4b, 0x14, 0x17, 0x38, 0x71, 0x47, 0x21, 0x0c, 0x4a, 0x62, 0x03, 0xfb, 0xd9,
	0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x16, 0x43, 0xf4, 0xf3, 0x02, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TransportClient is the client API for Transport service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TransportClient interface {
	Trans(ctx context.Context, in *TransportReq, opts ...grpc.CallOption) (*TransportResp, error)
}

type transportClient struct {
	cc *grpc.ClientConn
}

func NewTransportClient(cc *grpc.ClientConn) TransportClient {
	return &transportClient{cc}
}

func (c *transportClient) Trans(ctx context.Context, in *TransportReq, opts ...grpc.CallOption) (*TransportResp, error) {
	out := new(TransportResp)
	err := c.cc.Invoke(ctx, "/transport.transport/trans", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TransportServer is the server API for Transport service.
type TransportServer interface {
	Trans(context.Context, *TransportReq) (*TransportResp, error)
}

// UnimplementedTransportServer can be embedded to have forward compatible implementations.
type UnimplementedTransportServer struct {
}

func (*UnimplementedTransportServer) Trans(ctx context.Context, req *TransportReq) (*TransportResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Trans not implemented")
}

func RegisterTransportServer(s *grpc.Server, srv TransportServer) {
	s.RegisterService(&_Transport_serviceDesc, srv)
}

func _Transport_Trans_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransportReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransportServer).Trans(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.transport/Trans",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransportServer).Trans(ctx, req.(*TransportReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Transport_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transport.transport",
	HandlerType: (*TransportServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "trans",
			Handler:    _Transport_Trans_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "trans.proto",
}
